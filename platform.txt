# ------------------------------
# RL78/G23 and platform.
# ------------------------------
# For more info:
# LLVM Prototype Package for Tools Test
name=Renesas RL78/G23
version=1.3.1

# --------------------- 
# AVR compile variables
# --------------------- 
#compiler.optimize =-O2
compiler.optimize =-Os

#------------------------------------#
# LLVM Compiler Common Variable
#------------------------------------#
compiler.path={runtime.tools.llvm-rl78.path}/bin/

#------------------------------------#
# LLVM Compiler variable
#------------------------------------#
compiler.c.cmd=clang
compiler.c.flags=--target=rl78 {compiler.optimize} -ffunction-sections -fdata-sections -fdiagnostics-parseable-fixits -g -mcpu=s3 -v -std=gnu99 -DARDUINO=1813 -D__RL78__ -DG23_FPB

#------------------------------------#
# LLVM C++ Compiler variable
#------------------------------------#
compiler.cpp.cmd=clang++
compiler.cpp.flags=--target=rl78 {compiler.optimize} -g -ffunction-sections -fdata-sections -fdiagnostics-parseable-fixits -DCPPAPP -DARDUINO=1813 -D__RL78__ -DG23_FPB

#------------------------------------#
# LLVM Asemble variable
#------------------------------------#
compiler.S.cmd=clang
compiler.S.flags=--target=rl78 {compiler.optimize} -ffunction-sections -fdata-sections -fdiagnostics-parseable-fixits -g -mcpu=s3 -DCPPAPP 

#------------------------------------#
# LLVM Linker variable
#------------------------------------#
compiler.c.elf.cmd=clang++
compiler.c.elf.flags=--target=rl78 -ffunction-sections -fdata-sections -fdiagnostics-parseable-fixits -g -mcpu=s3 

#------------------------------------#
# LLVM Object Copy variable
#------------------------------------#
compiler.elf2hex.cmd=llvm-objcopy
compiler.elf2hex.flags=

#------------------------------------#
# LLVM print Size variable
#------------------------------------#
compiler.size.cmd=llvm-size
compiler.size.flags=--format=sysv

#------------------------------------#
# LLVM include paths
#------------------------------------#
#--------------------------------------------------#
# Add Config_TAU0_*_Servo for Servo Motor Library
#--------------------------------------------------#
inc0="-I{runtime.platform.path}/cores/rl78g23" 
inc1="-I{runtime.platform.path}/cores/rl78g23/avr" 
inc2="-I{runtime.platform.path}/cores/rl78g23/smc_gen/Config_ADC" 
inc3="-I{runtime.platform.path}/cores/rl78g23/smc_gen/Config_CSI11" 
inc4="-I{runtime.platform.path}/cores/rl78g23/smc_gen/Config_IICA0" 
inc5="-I{runtime.platform.path}/cores/rl78g23/smc_gen/Config_IICA1" 
inc6="-I{runtime.platform.path}/cores/rl78g23/smc_gen/Config_INTC" 
inc7="-I{runtime.platform.path}/cores/rl78g23/smc_gen/Config_ITL000" 
inc8="-I{runtime.platform.path}/cores/rl78g23/smc_gen/Config_ITL001" 
inc9="-I{runtime.platform.path}/cores/rl78g23/smc_gen/Config_ITL012" 
inc10="-I{runtime.platform.path}/cores/rl78g23/smc_gen/Config_ITL013" 
inc11="-I{runtime.platform.path}/cores/rl78g23/smc_gen/Config_RTC" 
inc12="-I{runtime.platform.path}/cores/rl78g23/smc_gen/Config_TAU0_01_PWM" 
inc13="-I{runtime.platform.path}/cores/rl78g23/smc_gen/Config_TAU0_0_Mesure_Signal" 
inc14="-I{runtime.platform.path}/cores/rl78g23/smc_gen/Config_TAU0_1_Mesure_Signal" 
inc15="-I{runtime.platform.path}/cores/rl78g23/smc_gen/Config_TAU0_1_Servo" 
inc16="-I{runtime.platform.path}/cores/rl78g23/smc_gen/Config_TAU0_1_Square_Wave" 
inc17="-I{runtime.platform.path}/cores/rl78g23/smc_gen/Config_TAU0_2_Mesure_Signal" 
inc18="-I{runtime.platform.path}/cores/rl78g23/smc_gen/Config_TAU0_2_Servo" 
inc19="-I{runtime.platform.path}/cores/rl78g23/smc_gen/Config_TAU0_2_Square_Wave" 
inc20="-I{runtime.platform.path}/cores/rl78g23/smc_gen/Config_TAU0_23_PWM" 
inc21="-I{runtime.platform.path}/cores/rl78g23/smc_gen/Config_TAU0_3_Mesure_Signal" 
inc22="-I{runtime.platform.path}/cores/rl78g23/smc_gen/Config_TAU0_3_Servo" 
inc23="-I{runtime.platform.path}/cores/rl78g23/smc_gen/Config_TAU0_3_Square_Wave" 
inc24="-I{runtime.platform.path}/cores/rl78g23/smc_gen/Config_TAU0_4_Mesure_Signal" 
inc25="-I{runtime.platform.path}/cores/rl78g23/smc_gen/Config_TAU0_4_Servo" 
inc26="-I{runtime.platform.path}/cores/rl78g23/smc_gen/Config_TAU0_4_Square_Wave" 
inc27="-I{runtime.platform.path}/cores/rl78g23/smc_gen/Config_TAU0_45_PWM" 
inc28="-I{runtime.platform.path}/cores/rl78g23/smc_gen/Config_TAU0_5_Mesure_Signal" 
inc29="-I{runtime.platform.path}/cores/rl78g23/smc_gen/Config_TAU0_5_Servo" 
inc30="-I{runtime.platform.path}/cores/rl78g23/smc_gen/Config_TAU0_5_Square_Wave" 
inc31="-I{runtime.platform.path}/cores/rl78g23/smc_gen/Config_TAU0_6_Mesure_Signal" 
inc32="-I{runtime.platform.path}/cores/rl78g23/smc_gen/Config_TAU0_6_Micros"
inc33="-I{runtime.platform.path}/cores/rl78g23/smc_gen/Config_TAU0_6_Square_Wave" 
inc34="-I{runtime.platform.path}/cores/rl78g23/smc_gen/Config_TAU0_6_Servo" 
inc35="-I{runtime.platform.path}/cores/rl78g23/smc_gen/Config_TAU0_67_PWM" 
inc36="-I{runtime.platform.path}/cores/rl78g23/smc_gen/Config_TAU0_7_Mesure_Signal" 
inc37="-I{runtime.platform.path}/cores/rl78g23/smc_gen/Config_TAU0_7_MSTimer2" 
inc38="-I{runtime.platform.path}/cores/rl78g23/smc_gen/Config_TAU0_7_Square_Wave" 
inc39="-I{runtime.platform.path}/cores/rl78g23/smc_gen/Config_TAU0_7_Servo" 
inc40="-I{runtime.platform.path}/cores/rl78g23/smc_gen/Config_UART0" 
inc41="-I{runtime.platform.path}/cores/rl78g23/smc_gen/Config_UART1" 
inc42="-I{runtime.platform.path}/cores/rl78g23/smc_gen/Config_UART2" 
inc43="-I{runtime.platform.path}/cores/rl78g23/smc_gen/Config_WDT" 
inc44="-I{runtime.platform.path}/cores/rl78g23/smc_gen/r_bsp" 
inc45="-I{runtime.platform.path}/cores/rl78g23/smc_gen/r_config" 
inc46="-I{runtime.platform.path}/cores/rl78g23/smc_gen/general" 

Libinc0="-I{runtime.platform.path}/libraries/Ethernet3/src" 
Libinc1="-I{runtime.platform.path}/libraries/Ethernet3/src/utility" 
Libinc2="-I{runtime.platform.path}/libraries/Firmata/src" 
Libinc3="-I{runtime.platform.path}/libraries/LiquidCrystal/src" 
Libinc4="-I{runtime.platform.path}/libraries/RTC/utility"
Libinc5="-I{runtime.platform.path}/libraries/SD/src/Tfat_Drivers" 
Libinc6="-I{runtime.platform.path}/libraries/SD/src/Tfat_Drivers/drv_if" 
Libinc7="-I{runtime.platform.path}/libraries/SD/src/Tfat_Drivers/mmc_driver" 
Libinc8="-I{runtime.platform.path}/libraries/SD/src/Tfat_Drivers/mmc_driver/com"
Libinc9="-I{runtime.platform.path}/libraries/SD/src/Tfat_Drivers/mmc_driver/com/rl78_32MHz_LLVM" 
Libinc10="-I{runtime.platform.path}/libraries/SD/src/Tfat_Drivers/mmc_driver/mmc" 
Libinc11="-I{runtime.platform.path}/libraries/SD/src/Tfat_Drivers/mmc_driver/mmc/rl78" 
Libinc12="-I{runtime.platform.path}/libraries/SD/src/Tfat_Drivers/tfat" 
Libinc13="-I{runtime.platform.path}/libraries/SD/src/Tfat_Drivers/tfat/include" 
Libinc14="-I{runtime.platform.path}/libraries/SD/src/Tfat_Drivers/tfat/src" 
Libinc15="-I{runtime.platform.path}/libraries/Servo/Utility"
Libinc16="-I{runtime.platform.path}/libraries/SoftwareSerial/src" 
Libinc17="-I{runtime.platform.path}/libraries/Wire/src"
Libinc18="-I{runtime.platform.path}/libraries/Wire/src/Utility"

incA={inc0}  {inc1}  {inc2}  {inc3}  {inc4}  {inc5}  {inc6}  {inc7}  {inc8}  {inc9} 
incB={inc10} {inc11} {inc12} {inc13} {inc14} {inc15} {inc16} {inc17} {inc18} {inc19} 
incC={inc20} {inc21} {inc22} {inc23} {inc24} {inc25} {inc26} {inc27} {inc28} {inc29} 
incD={inc30} {inc31} {inc32} {inc33} {inc34} {inc35} {inc36} {inc37} {inc38} {inc39} 
incE={inc40} {inc41} {inc42} {inc43} {inc44} {inc45} {inc46}
incF=

incG={Libinc0}  {Libinc1}  {Libinc2}  {Libinc3}  {Libinc4}  {Libinc5}  {Libinc6}  {Libinc7}  {Libinc8} {Libinc9} 
incH={Libinc10} {Libinc11} {Libinc12} {Libinc13} {Libinc14} {Libinc15} {Libinc16} {Libinc17} {Libinc18} 
incI=

compiler.includes={incA} {incB} {incC} {incD} {incE} {incF} {incG} {incH} {incI}

# this can be overriden in boards.txt
build.extra_flags=

# --------------------
# LLVM compile patterns
# --------------------

# --------------------
# Compile c files
# --------------------
recipe.c.o.pattern="{compiler.path}{compiler.c.cmd}"  {compiler.c.flags} {build.extra_flags} {includes} {compiler.includes} -c "{source_file}" -o "{object_file}"

# --------------------
# Compile c++ files
# --------------------
recipe.cpp.o.pattern="{compiler.path}{compiler.cpp.cmd}"  {compiler.cpp.flags} {build.extra_flags} {includes} {compiler.includes}  -o "{object_file}" -MMD  -MP -MF "{object_file}" -c  "{source_file}"

# --------------------
# Compile S files
# --------------------
recipe.S.o.pattern="{compiler.path}{compiler.S.cmd}" {includes} {compiler.includes} {compiler.S.flags} -c -x assembler-with-cpp "{source_file}" -o "{object_file}"

# --------------------
# Create archives
# --------------------
compiler.ar.cmd=llvm-ar.exe
compiler.ar.flags=rcs
recipe.ar.pattern="{compiler.path}{compiler.ar.cmd}" {compiler.ar.flags} "{archive_file_path}" "{object_file}"

# --------------------
# Combine gc-sections, archives, and objects
# --------------------
recipe.c.combine.pattern="{compiler.path}{compiler.c.elf.cmd}" {object_files} "{build.path}/core/smc_gen/general/r_cg_vect_table.c.o" "-L{build.path}" "{build.path}/{archive_file}" "-T{runtime.platform.path}/{build.ldscript}"  -Wl,-Map={build.path}/{build.project_name}.map -Wl,--start-group -Wl,--end-group -nostartfiles -Wl,-e_PowerON_Reset -Wl,--gc-sections -Wl,--icf=none -o {build.path}/{build.project_name}.elf

# --------------------
# Create eeprom
# --------------------
recipe.objcopy.eep.pattern=

# --------------------
# Create hex
# --------------------
recipe.objcopy.hex.pattern="{compiler.path}{compiler.elf2hex.cmd}" {compiler.elf2hex.flags} "{build.path}/{build.project_name}.elf" -O srec "{build.path}/{build.project_name}.mot"

# --------------------
# Compute size
# --------------------
recipe.size.pattern="{compiler.path}{compiler.size.cmd}" {compiler.size.flags} "{build.path}/{build.project_name}.elf"
recipe.size.regex=^(?:\.vec |\.vects |\.callt0 |\.option_byte |\.security_id |\.lowtext |\.init |\.fini |\.rodata |\.text |\.textf |\.frodata |\.eh_frame_hdr |\.eh_frame |\.data |\.dataf |\.sdata |\.saddr )\s+([0-9]+).*
recipe.size.regex.data=^(?:\.data |\.dataf |\.sdata |\.saddr |\.sbss |\.bss |\.bssf |\.stack )\s+([0-9]+).*

# --------------------
# SAM3 Uploader tools
# -------------------

tools.rl78flash.cmd=rl78flash_g2x
tools.rl78flash.cmd.windows=rl78flash_g2x.exe
tools.rl78flash.path={runtime.tools.rl78.path}

tools.rl78flash.upload.params.verbose=
tools.rl78flash.upload.params.quiet=
tools.rl78flash.upload.pattern="{path}/{cmd}" -b 0 {serial.port.file} "{build.path}/{build.project_name}.mot"

#<EOF>